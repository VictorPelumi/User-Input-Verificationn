{"ast":null,"code":"var _jsxFileName = \"D:\\\\New-React-Project\\\\Forms and User Input\\\\src\\\\components\\\\BasicForm.js\",\n    _s = $RefreshSig$();\n\nimport useInput from \"../hooks/use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst forName = value => value.trim() !== \"\";\n\nconst forEmail = value => value.includes(\"@\");\n\nconst BasicForm = props => {\n  _s();\n\n  const {\n    value: enteredFirstName,\n    isValid: enteredFirstNameIsValid,\n    hasError: firstNameInputHasError,\n    reset: resetFirstNameInput,\n    valueChangeHandler: firstNameChangeHandler,\n    inputBlurHandler: firstNameBlurHandler\n  } = useInput(forName);\n  const {\n    value: enteredLastName,\n    isValid: enteredLastNameIsValid,\n    hasError: lastNameInputHasError,\n    reset: resetlastNameInput,\n    valueChangeHandler: lastNameChangeHandler,\n    inputBlurHandler: lastNameBlurHandler\n  } = useInput(forName);\n  const {\n    value: enteredEmail,\n    isValid: enteredEmailIsValid,\n    hasError: emailInputHasError,\n    reset: resetEmailInput,\n    valueChangeHandler: emailChangeHandler,\n    inputBlurHandler: emailBlurHandler\n  } = useInput(value => value.includes(\"@\"));\n  let formIsValid = false;\n\n  if (enteredFirstNameIsValid && enteredLastNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  }\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n\n    if (!enteredFirstNameIsValid || !enteredLastNameIsValid || !enteredEmailIsValid) {\n      return;\n    }\n\n    console.log(enteredFirstName);\n    console.log(enteredLastName);\n    console.log(enteredEmail);\n    resetFirstNameInput();\n    resetlastNameInput();\n    resetEmailInput();\n  };\n\n  const firstNameInputClass = firstNameInputHasError ? \"form-control invalid\" : \"form-control\";\n  const lastNameInputClass = lastNameInputHasError ? \"form-control invalid\" : \"form-control\";\n  const emailNameInputClass = emailInputHasError ? \"form-control invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: firstNameInputClass,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          onChange: firstNameChangeHandler,\n          onBlur: firstNameBlurHandler,\n          value: enteredFirstName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), firstNameInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"First Name Field Must Not Be Empty!!!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: lastNameInputClass,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          onChange: lastNameChangeHandler,\n          onBlur: lastNameBlurHandler,\n          value: enteredLastName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), lastNameInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"Last Name Field Must Not Be Empty!!!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailNameInputClass,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"E-Mail Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"email\",\n        onChange: emailChangeHandler,\n        onBlur: emailBlurHandler,\n        value: enteredEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), emailInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Email Field Must Not Be Empty!!!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BasicForm, \"uFKMzew9dqgqxZu6GdTQztCifYk=\", false, function () {\n  return [useInput, useInput, useInput];\n});\n\n_c = BasicForm;\nexport default BasicForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicForm\");","map":{"version":3,"names":["useInput","forName","value","trim","forEmail","includes","BasicForm","props","enteredFirstName","isValid","enteredFirstNameIsValid","hasError","firstNameInputHasError","reset","resetFirstNameInput","valueChangeHandler","firstNameChangeHandler","inputBlurHandler","firstNameBlurHandler","enteredLastName","enteredLastNameIsValid","lastNameInputHasError","resetlastNameInput","lastNameChangeHandler","lastNameBlurHandler","enteredEmail","enteredEmailIsValid","emailInputHasError","resetEmailInput","emailChangeHandler","emailBlurHandler","formIsValid","formSubmissionHandler","event","preventDefault","console","log","firstNameInputClass","lastNameInputClass","emailNameInputClass"],"sources":["D:/New-React-Project/Forms and User Input/src/components/BasicForm.js"],"sourcesContent":["import useInput from \"../hooks/use-input\";\nconst forName = (value) => value.trim() !== \"\";\nconst forEmail = (value) => value.includes(\"@\");\nconst BasicForm = (props) => {\n  const {\n    value: enteredFirstName,\n    isValid: enteredFirstNameIsValid,\n    hasError: firstNameInputHasError,\n    reset: resetFirstNameInput,\n    valueChangeHandler: firstNameChangeHandler,\n    inputBlurHandler: firstNameBlurHandler,\n  } = useInput(forName);\n  const {\n    value: enteredLastName,\n    isValid: enteredLastNameIsValid,\n    hasError: lastNameInputHasError,\n    reset: resetlastNameInput,\n    valueChangeHandler: lastNameChangeHandler,\n    inputBlurHandler: lastNameBlurHandler,\n  } = useInput(forName);\n\n  const {\n    value: enteredEmail,\n    isValid: enteredEmailIsValid,\n    hasError: emailInputHasError,\n    reset: resetEmailInput,\n    valueChangeHandler: emailChangeHandler,\n    inputBlurHandler: emailBlurHandler,\n  } = useInput((value) => value.includes(\"@\"));\n\n  let formIsValid = false;\n\n  if (\n    enteredFirstNameIsValid &&\n    enteredLastNameIsValid &&\n    enteredEmailIsValid\n  ) {\n    formIsValid = true;\n  }\n\n  const formSubmissionHandler = (event) => {\n    event.preventDefault();\n\n    if (\n      !enteredFirstNameIsValid ||\n      !enteredLastNameIsValid ||\n      !enteredEmailIsValid\n    ) {\n      return;\n    }\n    console.log(enteredFirstName);\n    console.log(enteredLastName);\n    console.log(enteredEmail);\n\n    resetFirstNameInput();\n    resetlastNameInput();\n    resetEmailInput();\n  };\n\n  const firstNameInputClass = firstNameInputHasError\n    ? \"form-control invalid\"\n    : \"form-control\";\n  const lastNameInputClass = lastNameInputHasError\n    ? \"form-control invalid\"\n    : \"form-control\";\n  const emailNameInputClass = emailInputHasError\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className=\"control-group\">\n        <div className={firstNameInputClass}>\n          <label htmlFor=\"name\">First Name</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            onChange={firstNameChangeHandler}\n            onBlur={firstNameBlurHandler}\n            value={enteredFirstName}\n          />\n          {firstNameInputHasError && (\n            <p className=\"error-text\">First Name Field Must Not Be Empty!!!</p>\n          )}\n        </div>\n        <div className={lastNameInputClass}>\n          <label htmlFor=\"name\">Last Name</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            onChange={lastNameChangeHandler}\n            onBlur={lastNameBlurHandler}\n            value={enteredLastName}\n          />\n          {lastNameInputHasError && (\n            <p className=\"error-text\">Last Name Field Must Not Be Empty!!!</p>\n          )}\n        </div>\n      </div>\n      <div className={emailNameInputClass}>\n        <label htmlFor=\"email\">E-Mail Address</label>\n        <input\n          type=\"text\"\n          id=\"email\"\n          onChange={emailChangeHandler}\n          onBlur={emailBlurHandler}\n          value={enteredEmail}\n        />\n        {emailInputHasError && (\n          <p className=\"error-text\">Email Field Must Not Be Empty!!!</p>\n        )}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default BasicForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}